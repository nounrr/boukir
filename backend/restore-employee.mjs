import pool from './db/pool.js';

async function restoreEmployee() {
  try {
    // Obtenir la liste des employ√©s supprim√©s
    const [deletedEmployees] = await pool.query(
      'SELECT id, nom_complet, cin, deleted_at FROM employees WHERE deleted_at IS NOT NULL ORDER BY deleted_at DESC'
    );
    
    console.log('üìã Employ√©s supprim√©s trouv√©s:');
    if (deletedEmployees.length === 0) {
      console.log('   Aucun employ√© supprim√© trouv√©.');
      return;
    }
    
    deletedEmployees.forEach((emp, index) => {
      console.log(`   ${index + 1}. ID: ${emp.id} - ${emp.nom_complet || emp.cin} (supprim√© le ${new Date(emp.deleted_at).toLocaleString('fr-FR')})`);
    });
    
    console.log('\n‚ö†Ô∏è  Pour restaurer un employ√©, utilisez la fonction restoreEmployeeById(id)');
    console.log('   Exemple: await restoreEmployeeById(5)');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await pool.end();
  }
}

async function restoreEmployeeById(employeeId) {
  try {
    console.log(`üîÑ Restauration de l'employ√© ID: ${employeeId}...`);
    
    // V√©rifier que l'employ√© existe et est bien supprim√©
    const [employee] = await pool.query(
      'SELECT id, nom_complet, cin, deleted_at FROM employees WHERE id = ?',
      [employeeId]
    );
    
    if (employee.length === 0) {
      console.log('‚ùå Employ√© introuvable.');
      return;
    }
    
    if (!employee[0].deleted_at) {
      console.log('‚ö†Ô∏è  Cet employ√© n\'est pas supprim√©.');
      return;
    }
    
    // Restaurer l'employ√©
    const now = new Date();
    await pool.query(
      'UPDATE employees SET deleted_at = NULL, updated_at = ? WHERE id = ?',
      [now, employeeId]
    );
    
    console.log(`‚úÖ Employ√© "${employee[0].nom_complet || employee[0].cin}" restaur√© avec succ√®s.`);
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la restauration:', error);
  }
}

// Exporter les fonctions pour utilisation
export { restoreEmployee, restoreEmployeeById };

// Si le script est ex√©cut√© directement, afficher les employ√©s supprim√©s
if (import.meta.url === `file://${process.argv[1]}`) {
  restoreEmployee();
}